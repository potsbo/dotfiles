[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[user]
	name = Shimpei Otsubo
	email = potsbo@gmail.com
  privatekey = ~/.ssh/avalon.github
[core]
	excludesfile = ~/.gitignore_global
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = ~/.stCommitMsg
[color]
  ui = auto
[alias]
  amend = commit --amend -C HEAD
  co = checkout
  logg = log --stat --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cr %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
  mergelog = log --merges --pretty=format:'%C(yellow)%h %Cgreen%ci %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
  history = log --graph --date=short --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cd %Cblue%cn%Cred%d %Creset%s'
  unmerged = !git --no-pager diff --name-only --diff-filter=U
  graph = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'

  fok = checkout-origin

  g = graph
  br = branch
  pr = pull-request
  pprb = !git push && hub pull-request && hub browse
  pbrowse = !git push && hub browse
  showpr = !"f() { git log --merges --oneline --reverse --ancestry-path $1...master | grep 'Merge pull request #' | head -n 1; }; f"
  openpr = "!f() { hub browse -- `git log --merges --oneline --reverse --ancestry-path $1...master | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%pull/%'`; }; f"
  dif = --no-pager diff
  difpr = !git diff $(git merge-base --fork-point master)
  new = "!f() { hub sync && git checkout master && git remove-branches && git checkout -b $USER/$(echo $@ | sed 's/\\ /-/g'); }; f"
  orebase = "!f() { hub sync && git rebase master; }; f"
  omerge  = "!f() { hub sync && git merge master; }; f"
[push]
  default = current
[url "git@github.com:"]
  insteadOf = https://github.com/
[ghq]
	root = ~/src
[github]
	user = potsbo
	privatekey = ~/.ssh/id_rsa.github
